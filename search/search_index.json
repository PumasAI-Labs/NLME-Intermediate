{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pumas-AI NLME Covariates, Dose Control Parameters, and PKPD Indirect Response Models Workshop","text":"<p>This workshop is an intermediate-level NLME workshop in Pumas. It covers:</p> <ul> <li>Covariate Model Building</li> <li>Dose Control Parameters:<ul> <li><code>lags</code>: lag of the dose</li> <li><code>bioav</code>: bioavailability of the dose</li> <li><code>rate</code>: rate of the dosing</li> <li><code>duration</code>: duration of the dose</li> </ul> </li> <li>PKPD Indirect Response Models</li> </ul> <p>The following Julia files are provided:</p> <ol> <li><code>01-covariate.jl</code>: an overview on how to define covariate models</li> <li><code>02-dose_control.jl</code>: explains how to add dose control parameters to models</li> <li><code>03-indirect_response</code>: covers how to define indirect response models</li> </ol> <p>Prerequisites</p> <p>We recommend users being familiar with the Pumas <code>@model</code> specification, how to parse data into a <code>Population</code>, and how to use the <code>fit</code> function. Additionally users need to know how to perform model assessment and how to compare models.</p> <p>The formal requirements are the Pumas NLME Model Assessment Workshop.</p>"},{"location":"#schedule","title":"Schedule","text":"Time (HH:MM) Activity Description 00:00 Setup Download files required for the workshop 00:05 Covariate Model Building Showcase <code>01-covariate.jl</code> 00:20 Dose Control Parameters Showcase <code>02-dose_control.jl</code> 00:40 Indirect Response Model Showcase <code>03-indirect_response.jl</code> 00:55 Closing Remarks See if there are any questions and feedback"},{"location":"#get-in-touch","title":"Get in touch","text":"<p>If you have any suggestions or want to get in touch with our education team, please send an email to training@pumas.ai.</p>"},{"location":"#authors","title":"Authors","text":"<ul> <li>Jose Storopoli - jose@pumas.ai</li> </ul>"},{"location":"#license","title":"License","text":"<p>This content is licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p></p>"},{"location":"code_of_conduct/","title":"Code of Conduct for Pumas-AI NLME Covariates, Dose Control Parameters, and PKPD Indirect Response Models Workshop","text":"<p>At Pumas-AI we are committed to creating a friendly and respectful place for learning, teaching and contributing. All participants in our events and communications are expected to show respect and courtesy to others. To make clear what is expected, everyone participating in Pumas-AI activities is required to conform to the Code of Conduct.</p> <p>Pumas-AI is dedicated to providing a welcoming and supportive environment for all people, regardless of background or identity. As such, we do not tolerate behaviour that is disrespectful to our instructors or learners or that excludes, intimidates, or causes discomfort to others. We do not tolerate discrimination or harassment based on characteristics that include, but are not limited to, gender identity and expression, sexual orientation, disability, physical appearance, body size, citizenship, nationality, ethnic or social origin, pregnancy, familial status, veteran status, genetic information, religion or belief (or lack thereof), membership of a national minority, property, age, education, socio-economic status, technical choices, and experience level.</p>"},{"location":"code_of_conduct/#expected-behaviour","title":"Expected Behaviour","text":"<p>All participants in our events and communications are expected to show respect and courtesy to others. All interactions should be professional regardless of platform: either online or in-person. In order to foster a positive and professional learning environment we encourage the following kinds of behaviours in all Pumas-AI events and platforms:</p> <ul> <li>Use welcoming and inclusive language</li> <li>Be respectful of different viewpoints and experiences</li> <li>Gracefully accept constructive criticism</li> <li>Focus on what is best for the community</li> <li>Show courtesy and respect towards other community members</li> </ul>"},{"location":"code_of_conduct/#unacceptable-behaviour","title":"Unacceptable Behaviour","text":"<p>Examples of unacceptable behaviour by participants at any Pumas-AI event/platform include:</p> <ul> <li>written or verbal comments which have the effect of excluding people on the basis of membership of any specific group</li> <li>causing someone to fear for their safety, such as through stalking, following, or intimidation</li> <li>violent threats or language directed against another person</li> <li>the display of sexual or violent images</li> <li>unwelcome sexual attention</li> <li>nonconsensual or unwelcome physical contact</li> <li>sustained disruption of talks, events or communications</li> <li>insults or put downs</li> <li>sexist, racist, homophobic, transphobic, ableist, or exclusionary jokes</li> <li>excessive swearing</li> <li>incitement to violence, suicide, or self-harm</li> <li>continuing to initiate interaction (including photography or recording) with someone after being asked to stop</li> <li>publication of private communication without consent</li> </ul>"},{"location":"code_of_conduct/#consequences-of-unacceptable-behaviour","title":"Consequences of Unacceptable Behaviour","text":"<p>Participants who are asked to stop any inappropriate behaviour are expected to comply immediately. This applies to any Pumas-AI events and platforms, either online or in-person. If a participant engages in behaviour that violates this code of conduct, the organisers may warn the offender, ask them to leave the event or platform (without refund, if applicable), or engage with Pumas-AI representatives to investigate the Code of Conduct violation and impose appropriate sanctions.</p>"},{"location":"code_of_conduct/#get-in-touch","title":"Get in touch","text":"<p>If you have any suggestions or want to get in touch with our education team, please send an email to training@pumas.ai.</p>"},{"location":"code_of_conduct/#license","title":"License","text":"<p>This content is licensed under Creative Commons Attribution-ShareAlike 4.0 Internacional.</p> <p></p>"},{"location":"contribute/","title":"How to Contribute","text":"<p>If you want to contribute to this workshop, please open a pull request at <code>PumasAI-Labs/NLME-Intermediate</code>.</p> <p>By submitting a pull request, you are in accordance that your contribution will be licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p>Once your pull request is approved and merged, you'll be acknowledged as one of the authors in the workshop site and GitHub repository.</p>"},{"location":"instructors/","title":"Instructor's Notes for Pumas-AI NLME Covariates, Dose Control Parameters, and PKPD Indirect Response Models Workshop","text":"<p>Start with the <code>01-covariate.jl</code> file. In this file you'll guide learners on how to build covariate models. Start with the <code>DataFrame</code> of the <code>nlme_sample</code> dataset from <code>PharmaDatasets</code>. You'll see that this dataset has the standard PK dataset columns such as <code>:ID</code>, <code>:TIME</code>, <code>:DV</code>, <code>:AMT</code>, <code>:EVID</code> and <code>:CMT</code>. Spend some time to remind learners about these NM-TRAN standard columns, as well how to pass them as values to the keyword arguments of the <code>read_pumas</code> function. The dataset also contains the following list of covariates:</p> <ul> <li><code>:WT</code>: subject weight in kilograms</li> <li><code>:SEX</code>: subject sex, either <code>\"F\"</code> or <code>\"M\"</code></li> <li><code>:CRCL</code>: subject creatinine clearance</li> <li><code>:GROUP</code>: subject dosing group, either <code>\"500 mg\"</code>, <code>\"750 mg\"</code>, or <code>\"1000 mg\"</code></li> </ul> <p>If your audience is data-centric and time allowing, you can spend some time doing some data exploratory analysis. If you do, don't forget to load the <code>DataFrames</code>/<code>DataFramesMeta</code> package(s). The first step in our covariate model building workflow is to parse data into a <code>Population</code>. This is accomplished with the <code>read_pumas</code> function. Here we are to use the <code>covariates</code> keyword argument to pass a vector of column names to be parsed as covariates. The second step of our covariate model building workflow is to develop a base model, i.e., a model without any covariate effects on its parameters. This represents the null model against which covariate models can be tested after checking if covariate inclusion is helpful in our model. The third step of our covariate model building workflow is to actually develop one or more covariate models. Let's develop two covariate models:</p> <ol> <li>allometric scaling based on weight</li> <li>clearance effect based on creatinine clearance</li> </ol> <p>To include covariates in a Pumas model we need to first include them in the <code>@covariates</code> block. Then, we are free to use them inside the <code>@pre</code> block As you showcase the base and covariates models highlight the differences amongst them. Take note that the second covariate model needs a different set of initial parameters estimates due to having extra parameters. For the first covariate model, the one that does allometric scaling based on weight, once we included the <code>WT</code> covariate in the <code>@covariates</code> block we can use the <code>WT</code> values inside the <code>@pre</code> block. For both clearance (<code>CL</code>) and volume of the central compartment (<code>Vc</code>), we are allometric scaling by the <code>WT</code> value by the mean weight <code>70</code> and, in the case of <code>CL</code> using an allometric exponent with value <code>0.75</code>. For the second covariate model, the <code>covariate_model_wt_crcl</code> model, we are keeping our allometric scaling on <code>WT</code> from before. But we are also adding a new covariate creatinine clearance (<code>CRCL</code>), dividing clearance (<code>CL</code>) into hepatic (<code>hepCL</code>) and renal clearance (<code>renCL</code>), along with a new parameter <code>dCRCL</code>. <code>dCRCL</code> is the exponent of the power function for the effect of creatinine clearance on renal clearance. In some models this parameter is fixed, however we'll allow the model to estimate it. This is a good example on how to add covariate coefficients such as <code>dCRCL</code> in any Pumas covariate model. Note that we need a new initial parameters values' list since the previous one we used doesn't include <code>dCRCL</code>, <code>tvcl_hep</code> or <code>tvcl_ren</code>. Now that we've fitted all of our models we need to compare them and choose one for our final model. We begin by analyzing the model metrics. Highlight the AIC values between the models, prefer the lowest value. Additionally, we should inspect the goodness of fit of the model. This is done with the plotting function <code>goodness_of_fit</code>, which should be given a result from a <code>inspect</code> function. Go over the plots comparing the three models. Finally, we also perform VPCs to help the model comparison task.</p> <p>Now, proceed to the dose control parameters (DCP) workflow with the <code>02-dose_control.jl</code>. Here the idea is to showcase the new <code>@dosecontrol</code> block. Explain that this block allows for four special variables:</p> <ul> <li><code>lags</code>: the lag of the dose</li> <li><code>bioav</code>: the bioavailability of the dose</li> <li><code>duration</code>: the duration of the dose</li> <li><code>rate</code>: the rate of the dose</li> </ul> <p>These are specified with the syntax <code>dcp = (; Cmt=value)</code> where:</p> <ul> <li><code>dcp</code>: the dose control parameter (<code>lags</code>, <code>bioav</code>, <code>duration</code> or <code>rate</code>)</li> <li><code>Cmt</code>: the compartment where the DCP will be applied</li> <li><code>value</code>: value to use the for the DCP</li> </ul> <p>Here you will have three models to show learners. First, the <code>lags</code> model will have the <code>lags</code> as a DCP in the <code>@dosecontrol</code> block. Here you will explain how the learners can add compartments to which the <code>lags</code> will have an effect, and which value it will take. This is done with a <code>NamedTuple</code>. Second, the <code>bioav</code> model has a different DCP, <code>bioav</code>, but the logic is the same. Finally, the <code>lags_bioav</code> has two DCPs, <code>lags</code> and <code>bioav</code>. Here the idea is to showcase that you can not only have multiple compartments but also multiple DCPs. Be careful with random-effects (\u03b7) on the DCPs since those can include discontinuities in the objective function, and may give unstable estimates during the fitting procedure.</p> <p>Finally, we'll move into indirect response models, and also into PD models. Proceed to the <code>03-indirect_response.jl</code> file. Here the <code>pkdata</code> has two columns of observations: the <code>:dv</code> and the <code>:resp</code> columns. Explain that the <code>:dv</code> is for the PK measurements and the <code>:resp</code> for the PD measurements. This is a sequential PD model. That means, that we'll fit first the PK part of the model. The PK model is not different from the models that learners have experienced in the pre-requisites of this workshop. Then, we proceed by extracting the PK individual parameters from the fit and merging to the original data. We read the updated data into a <code>Population</code> and pass the PK individual parameters as covariates in the <code>read_pumas</code> function. Now, walkthrough the PD model definition. Make sure that learners understand the different PD components in the <code>@param</code>, <code>@random</code>, <code>@pre</code> and <code>@derived</code> block. There are two new model blocks that learners might not have been exposed yet: <code>@init</code> and <code>@vars</code>. The <code>@init</code> block has the purpose of defining initial values for the subjects compartments. The compartment always has an initial value of <code>0</code> or the dosing event at time <code>0</code> if not specified with <code>@init</code>. In the <code>@init</code> in the model we are only specifying initial values for the PD compartment <code>Resp</code>. The <code>@vars</code> block is used to define aliases that can be used in the <code>@dynamics</code> and <code>@derived</code> blocks. These aliases can use any variable defined in the <code>@pre</code> and <code>@covariates</code> block and any Julia variable or value, user-defined or not. This is a good way to declutter your ODE equations in the <code>@dynamics</code> block. Finally, showcase a GoF plot for the PD inspect result. The important part here is to showcase the flexibility and ease-of-use of Pumas modeling syntax to define complex models without overloading the user.</p>"},{"location":"instructors/#get-in-touch","title":"Get in touch","text":"<p>If you have any suggestions or want to get in touch with our education team, please send an email to training@pumas.ai.</p>"},{"location":"instructors/#license","title":"License","text":"<p>This content is licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p></p>"},{"location":"reference/","title":"Reference Sheets for Pumas-AI NLME Covariates, Dose Control Parameters, and PKPD Indirect Response Models Workshop","text":""},{"location":"reference/#key-points","title":"Key Points","text":"<ul> <li>You can parse covariates while reading a <code>DataFrame</code> with the <code>covariates</code> keyword argument in <code>read_pumas</code>.</li> <li>Covariates can be included in a Pumas model with the <code>@covariates</code> block and used throughout.</li> <li>Dose control parameters can be defined in the <code>@dosecontrol</code> in a Pumas model.</li> <li>Indirect response models, and other PKPD models, can be defined in one joint Pumas model using the model blocks for both PK and PD components.</li> <li>You can set the subjects' initial compartment values with the <code>@init</code> model block.</li> <li>The <code>@vars</code> model block allows you to define aliases that can help decluttering your ODEs in the <code>@dynamics</code> block.</li> </ul>"},{"location":"reference/#summary-of-basic-commands","title":"Summary of Basic Commands","text":"Action Command Observations Parse data with covariates into a <code>Population</code> <code>read_pumas(pkdata; covariates=[:covar1, :covar2, ...])</code> <code>covariates</code> is a vector of column names where covariate data is stored in the <code>pkdata</code> <code>DataFrame</code> Add covariates to a model <code>@covariates covar1 covar2 ...</code> The <code>@covariates</code> block should be used inside a model. Also note that the matching <code>Population</code> used in the <code>fit</code> with the desired model should also have the same covariates available Add a dose control parameter to a model <code>@dosecontrol begin dcp = (; Cmt=value) end</code> The <code>@dosecontrol</code> block should be used inside a model. <code>dcp</code> is a dose control parameter (<code>lags</code>, <code>bioav</code>, <code>rate</code> or <code>duration</code>) and <code>Cmt</code> is the compartment name where the DCP effect should be applied and <code>value</code> is the value of the effect. You can have multiples <code>Cmt</code>s and also multiples <code>dcp</code>s. Parse data with multiple observations into a <code>Population</code> <code>read_pumas(pkdata; observations=[:obs1, :obs2, ...])</code> <code>observations</code> is a vector of column names where observation data is stored in the <code>pkdata</code> <code>DataFrame</code> Define initial values for compartments in a model <code>@init begin Cmt = value end</code> The compartment always has an initial value of 0 or the dosing event at time 0 if not specified with <code>@init</code> Define aliases for the <code>@dynamics</code> and <code>@derived</code> block <code>@vars begin alias = value end</code> These are used mainly to declutter your ODEs in the <code>@dynamics</code> block"},{"location":"reference/#glossary","title":"Glossary","text":"Covariate <p>Any characteristic or feature that can impact the response to a drug. These could include demographic factors (like age, sex, or weight), disease characteristics (like disease stage or presence of other health conditions), genetic factors, or lab values (like liver function tests or kidney function tests).</p> Creatinine clearance <p>Creatinine clearance is a measure used to assess the functioning of the kidneys. Specifically, it provides an estimate of the glomerular filtration rate (GFR), which is the rate at which the kidneys filter waste from the blood.</p> Base model <p>A model without any covariate effects on its parameters. This represents the null model against which covariate models can be tested after checking if covariate inclusion is helpful in our model.</p> Allometric scaling <p>Allometric scaling is a method used to adjust pharmacokinetic parameters, such as clearance and volume of distribution, based on body size and composition.</p> Dose control parameters (DCP) <p>Parameters used to optimize and control the dose of a drug in a pharmacokinetic (PK) or pharmacodynamic (PD) model. These parameters can include lag, bioavaliability, rate and duration.</p> Lag of the dose <p>The time delay between drug administration and the commencement of its absorption into the systemic circulation.</p> Bioavailability of the dose <p>The fraction of an administered dose of a drug that reaches the systemic circulation in its unchanged or active form. </p> Rate of the dose <p>The rate of the drug absorption.</p> Duration of the dose <p>Length of time that drug concentrations remain within the therapeutic range after a dose is administered.</p> Indirect response model (IDR) <p>Type of pharmacodynamic model used to describe situations where a drug's effect occurs through a mechanism separate from the drug's direct action on a biological target. In other words, the drug doesn't act directly on the response, but influences it indirectly, often by modulating a rate of production or loss of the measured response. These models are often used when there is a delay between drug concentration and observable effect, or when the drug effect is believed to act through some intermediary process.</p>"},{"location":"reference/#get-in-touch","title":"Get in touch","text":"<p>If you have any suggestions or want to get in touch with our education team, please send an email to training@pumas.ai.</p>"},{"location":"reference/#license","title":"License","text":"<p>This content is licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p></p>"},{"location":"waiver/","title":"Waiver of Liability for Pumas-AI NLME Covariates, Dose Control Parameters, and PKPD Indirect Response Models Workshop","text":"<p>By using the content provided by Pumas-AI, you agree to the following:</p> <ol> <li>You acknowledge that Pumas-AI has provided you with access to certain content (the \"Content\"),    including but not limited to software, documentation, images, videos, and other materials.</li> <li>You understand and agree that the Content is provided \"as is,\" without warranty of any kind,    either express or implied, including but not limited to the implied warranties of merchantability    and fitness for a particular purpose.</li> <li>You acknowledge that Pumas-AI is not responsible for how you use the Content,    and that Pumas-AI shall not be liable for any damages arising from your use of the Content,    including but not limited to direct, indirect, incidental, special, consequential, or punitive damages,    whether in an action of contract, negligence, or other tortious action,    even if Pumas-AI has been advised of the possibility of such damages.</li> <li>You agree to indemnify, defend, and hold harmless Pumas-AI, its officers, directors, employees, agents,    and affiliates from and against any and all claims, damages, losses, liabilities,    and expenses (including reasonable attorneys' fees) arising from your use of the Content.</li> <li>You acknowledge that this Waiver of Liability is a legally binding agreement between you and Pumas-AI,    and that it governs your use of the Content.    If you do not agree to the terms of this Waiver of Liability, you must immediately cease using the Content.</li> </ol>"},{"location":"waiver/#get-in-touch","title":"Get in touch","text":"<p>If you have any suggestions or want to get in touch with our education team, please send an email to training@pumas.ai.</p>"},{"location":"waiver/#license","title":"License","text":"<p>This content is licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p></p>"}]}